import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

public class ATMInterface extends JFrame implements ActionListener {
    private JTextField textField;
    private JPasswordField passwordField;
    private JButton loginButton;
    private JLabel statusLabel;
    private JButton checkBalanceButton;
    private JButton depositButton;
    private JButton withdrawButton;

    private double balance = 1000; // Initial balance

    public ATMInterface() {
        setTitle("ATM Interface");
        setSize(400, 300);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setLayout(new GridLayout(5, 1));

        textField = new JTextField();
        passwordField = new JPasswordField();
        loginButton = new JButton("Login");
        statusLabel = new JLabel("Enter your credentials.");
        checkBalanceButton = new JButton("Check Balance");
        depositButton = new JButton("Deposit");
        withdrawButton = new JButton("Withdraw");

        loginButton.addActionListener(this);
        checkBalanceButton.addActionListener(this);
        depositButton.addActionListener(this);
        withdrawButton.addActionListener(this);

        add(statusLabel);
        add(textField);
        add(passwordField);
        add(loginButton);
        add(checkBalanceButton);
        add(depositButton);
        add(withdrawButton);

        setVisible(true);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == loginButton) {
            String username = textField.getText();
            String password = new String(passwordField.getPassword());
            // For simplicity, let's assume correct credentials are "user" and "password"
            if (username.equals("user") && password.equals("password")) {
                statusLabel.setText("Login successful.");
                checkBalanceButton.setEnabled(true);
                depositButton.setEnabled(true);
                withdrawButton.setEnabled(true);
            } else {
                statusLabel.setText("Invalid credentials.");
            }
        } else if (e.getSource() == checkBalanceButton) {
            JOptionPane.showMessageDialog(this, "Your balance is: $" + balance);
        } else if (e.getSource() == depositButton) {
            String depositAmount = JOptionPane.showInputDialog(this, "Enter deposit amount:");
            try {
                double amount = Double.parseDouble(depositAmount);
                balance += amount;
                JOptionPane.showMessageDialog(this, "Deposit successful. Your new balance is: $" + balance);
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "Invalid amount.");
            }
        } else if (e.getSource() == withdrawButton) {
            String withdrawAmount = JOptionPane.showInputDialog(this, "Enter withdraw amount:");
            try {
                double amount = Double.parseDouble(withdrawAmount);
                if (amount <= balance) {
                    balance -= amount;
                    JOptionPane.showMessageDialog(this, "Withdrawal successful. Your new balance is: $" + balance);
                } else {
                    JOptionPane.showMessageDialog(this, "Insufficient funds.");
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "Invalid amount.");
            }
        }
    }

    public static void main(String[] args) {
        new ATMInterface();
    }
}
